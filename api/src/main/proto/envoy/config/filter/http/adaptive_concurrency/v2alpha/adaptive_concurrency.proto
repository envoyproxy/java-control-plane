syntax = "proto3";

package envoy.config.filter.http.adaptive_concurrency.v2alpha;

option java_package = "io.envoyproxy.envoy.config.filter.http.adaptive_concurrency.v2alpha";
option java_outer_classname = "AdaptiveConcurrencyProto";
option java_multiple_files = true;

import "envoy/type/percent.proto";

import "google/protobuf/duration.proto";
import "google/api/annotations.proto";
import "google/protobuf/wrappers.proto";

import "validate/validate.proto";

// Configuration parameters for the gradient controller.
message GradientControllerConfig {
  // The percentile to use when summarizing aggregated samples. Defaults to p50.
  envoy.type.Percent sample_aggregate_percentile = 1;

  // Parameters controlling the periodic recalculation of the concurrency limit from sampled request
  // latencies.
  message ConcurrencyLimitCalculationParams {
    // The maximum value the gradient is allowed to take. This influences how aggressively the
    // concurrency limit can increase. Defaults to 2.0.
    google.protobuf.DoubleValue max_gradient = 1 [(validate.rules).double.gt = 1.0];

    // The allowed upper-bound on the calculated concurrency limit. Defaults to 1000.
    google.protobuf.UInt32Value max_concurrency_limit = 2 [(validate.rules).uint32.gt = 0];

    // The period of time samples are taken to recalculate the concurrency limit.
    google.protobuf.Duration concurrency_update_interval = 3 [(validate.rules).duration = {
      required: true,
      gt: {seconds: 0}
    }];
  }
  ConcurrencyLimitCalculationParams concurrency_limit_params = 2
      [(validate.rules).message.required = true];

  // Parameters controlling the periodic minRTT recalculation.
  message MinimumRTTCalculationParams {
    // The time interval between recalculating the minimum request round-trip time.
    google.protobuf.Duration interval = 1 [(validate.rules).duration = {
      required: true,
      gt: {seconds: 0}
    }];

    // The number of requests to aggregate/sample during the minRTT recalculation window before
    // updating. Defaults to 50.
    google.protobuf.UInt32Value request_count = 2 [(validate.rules).uint32.gt = 0];
  };
  MinimumRTTCalculationParams min_rtt_calc_params = 3 [(validate.rules).message.required = true];
}

message AdaptiveConcurrency {
  oneof concurrency_controller_config {
    option (validate.required) = true;

    // Gradient concurrency control will be used.
    GradientControllerConfig gradient_controller_config = 1
        [(validate.rules).message.required = true];
  }
}
