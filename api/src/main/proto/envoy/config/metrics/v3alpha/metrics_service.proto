syntax = "proto3";

package envoy.config.metrics.v3alpha;

option java_package = "io.envoyproxy.envoy.config.metrics.v3alpha";
option java_outer_classname = "MetricsServiceProto";
option java_multiple_files = true;

import "envoy/api/v3alpha/core/grpc_service.proto";

import "udpa/annotations/versioning.proto";

import "validate/validate.proto";

// [#protodoc-title: Metrics service]

// Metrics Service is configured as a built-in *envoy.metrics_service* :ref:`StatsSink
// <envoy_api_msg_config.metrics.v3alpha.StatsSink>`. This opaque configuration will be used to
// create Metrics Service.
// [#extension: envoy.stat_sinks.metrics_service]
message MetricsServiceConfig {
  option (udpa.annotations.versioning).previous_message_type =
      "envoy.config.metrics.v2.MetricsServiceConfig";

  // The upstream gRPC cluster that hosts the metrics service.
  api.v3alpha.core.GrpcService grpc_service = 1 [(validate.rules).message = {required: true}];
}
